package:
  name: flask-datadog-telegram
  version: 0.1.0
  description: Datadog - Telegram Integration by Saulo Ramos
  dependencies:
    runtime:
      - python3

environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
      - ./melange.rsa.pub
    repositories:
      - https://dl-cdn.alpinelinux.org/alpine/edge/main
      - https://dl-cdn.alpinelinux.org/alpine/edge/community
    packages:
      - alpine-baselayout-data
      - ca-certificates-bundle
      - busybox
      - gcc
      - musl-dev
      - python3
      - python3-dev
      - py3-pip
      - py3-virtualenv

pipeline:
  - name: Build Python application
    runs: |
      export PYTHONDONTWRITEBYTECODE=1
      export PYTHONUNBUFFERED=1
      EXECDIR="${{targets.destdir}}/usr/bin"
      WEBAPPDIR="${{targets.destdir}}/usr/share/webapps/datadog-telegram"
      mkdir -p "${EXECDIR}" "${WEBAPPDIR}"
      echo "#!/usr/share/webapps/datadog-telegram/venv/bin/python3" > "${EXECDIR}/datadog-telegram"
      cat app.py >> "${EXECDIR}/datadog-telegram"
      chmod +x "${EXECDIR}/datadog-telegram"
      virtualenv "${WEBAPPDIR}/venv"
      sh -c "source '${WEBAPPDIR}/venv/bin/activate' && pip install -r requirements.txt"
      mkdir -p /app
      cp -r . /app
      echo "EXPOSE 5000" > /app/Dockerfile
      echo 'CMD ["python", "app.py"]' >> /app/Dockerfile